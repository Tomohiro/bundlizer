#!/bin/sh

set -e


# Define constants

    readonly PREFIX=$(cd $(dirname $0)/.. && pwd)
    readonly BUNDLES=$PREFIX/bundles
    readonly COMMANDS=$PREFIX/libexec

    readonly bin_name=$(basename $0)


# Check dependencies

    check_dependencies() {
      if ! type gem > /dev/null; then
        echo 'RubyGems not found'
        return 1
      fi

      if ! type bundle > /dev/null; then
        echo 'Bundler not found'
        return 1
      fi
    }


# Display the Bundlizer help

    usage() {
      echo '
        ____                  _____
       / __ )__  ______  ____/ / (_)___  ___  _____
      / __  / / / / __ \/ __  / / /_  / / _ \/ ___/
     / /_/ / /_/ / / / / /_/ / / / / /_/  __/ /
    /_____/\__,_/_/ /_/\__,_/_/_/ /___/\___/_/'
      echo
      echo "Usage: $bin_name COMMAND [command-specific-options]"
      echo
      echo 'Bundler apps commands:'
      echo '  install   user/repository  # git clone git://github.com/user/repository, and bundle install'
      echo '  update    [app]            # named app git pull and bundle update(or update all)'
      echo '  uninstall app              # uninstall the app'
      echo '  list                       # display installed bundler apps'
      echo '  run       app/command      # named app/command bundle exec (e.g. bundlizer run heroku/heroku)'
      echo
      echo 'Bundlizer commands:'
      echo '  upgrade                    # upgrade the Bundlizer'
      echo '  help, --help               # display usage'
      echo '  version                    # display version'
    }


# Start the Bundlizer

    bundlizer() {

      local command=$1
      shift 1

      check_dependencies && {

        case $command in
        'help' | '--help')
          usage
          ;;
        *)
          if [ -f "$COMMANDS/bundlizer-$command" ]; then
            exec "$COMMANDS/bundlizer-$command" $@
          else
            echo "$bin_name: Could not find command '$command'."
            echo "See '$bin_name help' for more information on a specific command"
            return 1
          fi
          ;;
        esac

        return 0
      }
    }

[ -z $1 ] && usage && {
  exit $?
}

bundlizer $@
