#!/bin/sh

set -e

# Define constants

    readonly PREFIX=$(cd $(dirname $0)/.. && pwd)
    readonly BUNDLES=$PREFIX/bundles
    readonly APPS=$PREFIX/apps


# Install Bundler apps

    install() {
      local user=`echo $1 | cut -d '/' -f1`
      local app=`echo $1 | cut -d '/' -f2`
      if [ -n $user -a -n $app ]; then
        local url="git://github.com/$user/$app.git"
        cd $BUNDLES
        git clone $url
        bundle_install_at $BUNDLES/$app
        install_bundle_exec_wrappers $BUNDLES/$app
      else
        echo "Option Format error. See '`basename $0` help'"
        exit 1
      fi
    }


# Bundle install under the vendor directory

    bundle_install_at() {
      local gem_path=$1
      if [ -f $gem_path/Gemfile ]; then
        cd $gem_path
        echo
        echo "Start bundle installing to $gem_path"
        bundle install --path vendor/bundle
      fi
    }


# Install bundle exec warppers to bundlizer exec bin

    install_bundle_exec_wrappers() {
      local gem_path=$1
      for bin in `get_gem_bin_files $gem_path`; do
        bin_path=$APPS/$bin
        create_bundle_exec_wrapper $gem_path $bin > $bin_path
        chmod +x $bin_path
        echo "It was installed \`$bin\` into $bin_path"
      done
    }


# Return RubyGems executable file list

    get_gem_bin_files() {
      local bindir=$1/bin
      [ -d $bindir ] && ls $bindir
    }


# Create a `bundle exec` wrapper script

    create_bundle_exec_wrapper() {
      local gem_path=$1
      local bin=$2
      cat << EOF
#!/bin/sh

cd $gem_path
bundle exec $bin \$*
EOF
    }


install $@

exit 0
