#!/bin/sh

set -e


# Define constants

    readonly PREFIX=$(cd $(dirname $0)/.. && pwd)
    readonly COMMANDS=$PREFIX/libexec

    readonly bin_name=$(basename $0)


# Check dependencies

    check_dependencies() {
      if ! type gem > /dev/null; then
        echo 'RubyGems is not installed.'
        return 1
      fi

      if ! type bundle > /dev/null; then
        echo 'Bundler is not installed. Run `gem install bundler`'
        return 1
      fi
    }


# Display the Bundlizer help

    usage() {
      echo '
         ____                  _____
        / __ )__  ______  ____/ / (_)___  ___  _____
       / __  / / / / __ \/ __  / / /_  / / _ \/ ___/
      / /_/ / /_/ / / / / /_/ / / / / /_/  __/ /
     /_____/\__,_/_/ /_/\__,_/_/_/ /___/\___/_/'
      echo
      echo "Usage: $bin_name COMMAND [<args>]"
      echo
      echo 'Gem/Bundler apps commands:'
      echo '  install   <app>             # gem install from RubyGems.org'
      echo '            <user/repository> # git clone git://github.com/user/repository, and bundle install'
      echo '  update    [app]             # named app gem update / git pull and bundle update(or update all)'
      echo '  uninstall <app>             # uninstall the app'
      echo '  list      [-v|--verbose]    # show the installed apps ("-v or --verbose" is add extra information)'
      echo '  run       <app/command>     # named app/command exec (e.g. bundlizer run heroku/heroku)'
      echo '  path      <app>             # show the installed app path'
      echo '  depends   <app>             # show the dependencies of an installed app'
      echo '  use       <version> <app>   # set the local application-specific Ruby version (e.g. bundlizer use 1.9.3-p362 <gem-name>)'
      echo '            --unset   <app>   # unset the local Ruby version (e.g. bundlizer use --unset <gem-name>)'
      echo
      echo 'Bundlizer commands:'
      echo '  upgrade                     # upgrade the Bundlizer'
      echo '  help, --help                # show usage'
      echo '  version                     # show version'
    }


# Start the Bundlizer

    bundlizer() {

      local command=$1
      shift 1

      check_dependencies && {

        case $command in
        'help' | '--help')
          usage
          ;;
        *)
          if [ -f "$COMMANDS/bundlizer-$command" ]; then
            exec "$COMMANDS/bundlizer-$command" "$@"
          else
            echo "$bin_name: Could not find command '$command'."
            echo "See '$bin_name help' for more information on a specific command"
            return 1
          fi
          ;;
        esac

        return 0
      }
    }

[ -z $1 ] && usage && {
  exit $?
}

bundlizer "$@"
