#!/bin/bash

set -e

# Define constants

  readonly PREFIX=$(cd $(dirname $0)/.. && pwd)
  readonly BUNDLES=$PREFIX/bundles

# Check requirements

  function initialize {
    if ! type gem &> /dev/null; then
      _warn 'RubyGems not found'
    fi

    if ! type bundle &> /dev/null; then
      _warn 'Bundler not found'
    fi

    if [ ! -d $BUNDLES ]; then
      mkdir -p $BUNDLES/bin
    fi

    return 0
  }


# Return RubyGems executable file list

  function get_gem_bin_files {
    local bindir=$1/bin
    [ -d $bindir ] && ls $bindir
  }


# Bundle install under the vendor directory

  function bundle_install_at {
    local gem_path=$1
    if [ -f $gem_path/Gemfile ]; then
      cd $gem_path
      echo
      echo "Start bundle installing to $gem_path"
      bundle install --path vendor/bundle
    fi
  }


# Create a `bundle exec` wrapper script

  function create_bundle_exec_wrapper {
    local gem_path=$1
    local bin=$2
    cat << EOF
#!/bin/sh

cd $gem_path
bundle exec $bin \$*
EOF
  }


# Warning

  function _warn {
    echo $1
    exit 1
  }


# Start bundle installing

  function run {
    initialize && {

      for gem_path in `ls -d $BUNDLES/*`; do
        bundle_install_at $gem_path

        for bin in `get_gem_bin_files $gem_path`; do
          bin_path=$BUNDLES/bin/$bin
          create_bundle_exec_wrapper $gem_path $bin > $bin_path
          chmod +x $bin_path
          echo "It was installed \`$bin\` into $bin_path"
        done
      done

      exit 0
    }
  }

run $@
